<?php

namespace app\admin\controller;

use think\Controller;
use think\Db;
use think\Request;

class Goods extends Controller
{
    protected function _initialize()
    {
//        parent::_initialize(); // TODO: Change the autogenerated stub
        checkToken();
    }
    /**
     * 显示资源列表
     *
     * @return \think\Response
     */
    public function index()
    {
        $data = $this->request->get();
        if(isset($data['page'])&&!empty($data['page'])){
        $page = $data['page'];
    }else{
        $page = 1;
    };
        if(isset($data['limit'])&&!empty($data['limit'])){
            $limit = $data['limit'];
        }else{
            $limit = 3;
        }
        $sarr = [];
        if(isset($data['cid'])&&!empty($data['cid'])){
            $sarr['cid'] = $data['cid'];
        };
        if(isset($data['gname'])&&!empty($data['gname'])){
            $sarr['gname'] = ['like','%'.$data['gname'].'%'];
        };
        if(isset($data['min_price'])&&!empty($data['min_price'])&&isset($data['max_price'])&&!empty($data['max_price'])){
            $sarr['nprice'] = [
                'between',[$data['min_price'],$data['max_price']]
            ];
        };

        $goods = Db::table('goods')
            ->join('category','goods.cid=category.id')
            ->field('category.cname,goods.*')
            ->where($sarr)
            ->paginate($limit,false,[
                'page'=>$page,
            ]);
//        goods.id,goods.gname,goods.nprice,goods.oprice,goods.gdetail,goods.gthumb,goods.gbanner,goods.create_time,goods.update_time,goods.gstock,goods.description,goods.gbrand,goods.gnorms'
//        $model = model('Goods');
//        $goods = $model->selects();
        $count = $goods->total();
        $good = $goods->items();
        if ($count>0 && count($good)) {
            return json([
                'code' => config('code.success'),
                'msg' => '商品查询成功',
                'data' => $good,
                'count'=>$count,
            ]);
        } else {
            return json([
                'code' => config('code.success'),
                'msg' => '暂无数据'
            ]);
        }
    }

    /**
     * 显示创建资源表单页.
     *
     * @return \think\Response
     */
    public function create()
    {
        //
    }

    /**
     * 保存新建的资源
     *
     * @param  \think\Request $request
     * @return \think\Response
     */
    public function save(Request $request)
    {
        //权限身份验证，请求方式验证
        //验证参数
        $data = $this->request->post();
        $validate = validate('Goods');
        if (!$validate->scene('insert')->check($data)) {
            return json([
                'code' => config('code.fail'),
                'msg' => $validate->getError()
            ]);
        }
        $model = model('Goods');
        $result = $model->insert($data);
        if ($result) {
            return json([
                'code' => config('code.success'),
                'msg' => '商品添加成功',
            ]);
        } else {
            return json([
                'code' => config('code.fail'),
                'msg' => '商品添加失败'
            ]);
        }
    }

    /**
     * 显示指定的资源
     *
     * @param  int $id
     * @return \think\Response
     */
    public function read($id)
    {
        try{
            $model = model('Goods');
            $result = $model->selectone($id);
            if ($result) {
                return json([
                    'code' => config('code.success'),
                    'msg' => '获取成功',
                    'data'=>$result
                ]);
            } else {
                return json([
                    'code' => config('code.fail'),
                    'msg' => '失败'
                ]);
            }
        }catch (Exception $exception){
            return json([
                'code' => config('code.success'),
                'msg' => '服务器异常，请联系管理员'
            ]);
        }
    }

    /**
     * 显示编辑资源表单页.
     *
     * @param  int $id
     * @return \think\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * 保存更新的资源
     *
     * @param  \think\Request $request
     * @param  int $id
     * @return \think\Response
     */
    public function update(Request $request, $id)
    {
        $data = $this->request->put();
        $model = model('goods');
        $res = $model->updates($data,$id);
        if($res>0){
            return json([
                'code'=>config('code.success'),
                'msg'=>'商品更新成功',
            ]);
        }else{
            return json([
                'code'=>config('code.fail'),
                'msg'=>'商品更新失败'
            ]);
        }
    }

    /**
     * 删除指定资源
     *
     * @param  int $id
     * @return \think\Response
     */
    public function delete($id)
    {
        try{
//            $id = $this->request->delete();
//            var_dump($id);
//            $validate = validate('Category');
//            if (!$validate->scene('delete')->check($id)) {
//                return json([
//                    'code' => config('code.fail'),
//                    'msg' => $validate->getError()
//                ]);
//            }
            $model = model('Goods');
            $result = $model->del($id);
            if ($result) {
                return json([
                    'code' => config('code.success'),
                    'msg' => '商品删除成功'
                ]);
            } else {
                return json([
                    'code' => config('code.fail'),
                    'msg' => '商品删除失败'
                ]);
            }
        }catch (Exception $exception){
            return json([
                'code' => config('code.success'),
                'msg' => '服务器异常，请联系管理员'
            ]);
        }

    }
}
